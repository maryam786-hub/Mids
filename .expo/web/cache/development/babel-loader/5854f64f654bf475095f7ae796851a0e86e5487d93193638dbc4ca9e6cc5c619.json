{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar BitcoinData = function BitcoinData() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var localData = yield AsyncStorage.getItem('bitcoinData');\n        if (localData) {\n          setData(JSON.parse(localData));\n        } else {\n          fetch('https://api.coindesk.com/v1/bpi/currentprice.json').then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            setData(data.bpi);\n            AsyncStorage.setItem('bitcoinData', JSON.stringify(data.bpi));\n          });\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, []);\n  return data;\n};\nexport default BitcoinData;","map":{"version":3,"names":["useEffect","useState","AsyncStorage","BitcoinData","_useState","_useState2","_slicedToArray","data","setData","fetchData","_ref","_asyncToGenerator","localData","getItem","JSON","parse","fetch","then","response","json","bpi","setItem","stringify","apply","arguments"],"sources":["C:/Users/jutt computer/OneDrive/Desktop/Fa20-bse-018/FA20-BSE-018/BitcoinData.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst BitcoinData = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const localData = await AsyncStorage.getItem('bitcoinData');\r\n      if (localData) {\r\n        setData(JSON.parse(localData));\r\n      } else {\r\n        fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setData(data.bpi);\r\n            AsyncStorage.setItem('bitcoinData', JSON.stringify(data.bpi));\r\n          });\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return data;\r\n};\r\n\r\nexport default BitcoinData; "],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAAwBH,QAAQ,CAAC,EAAE,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBL,SAAS,CAAC,YAAM;IACd,IAAMS,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAMC,SAAS,SAASV,YAAY,CAACW,OAAO,CAAC,aAAa,CAAC;QAC3D,IAAID,SAAS,EAAE;UACbJ,OAAO,CAACM,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC,CAAC;QAChC,CAAC,MAAM;UACLI,KAAK,CAAC,mDAAmD,CAAC,CACvDC,IAAI,CAAC,UAACC,QAAQ;YAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;UAAA,EAAC,CACnCF,IAAI,CAAC,UAACV,IAAI,EAAK;YACdC,OAAO,CAACD,IAAI,CAACa,GAAG,CAAC;YACjBlB,YAAY,CAACmB,OAAO,CAAC,aAAa,EAAEP,IAAI,CAACQ,SAAS,CAACf,IAAI,CAACa,GAAG,CAAC,CAAC;UAC/D,CAAC,CAAC;QACN;MACF,CAAC;MAAA,gBAZKX,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;IAAA,GAYd;IAEDf,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,IAAI;AACb,CAAC;AAED,eAAeJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}